import { User } from '../../entities/User';
import { IMailProvider } from './../../providers/IMailProvider';
import { IUsersRepository } from './../../repositories/IUsersRepository';
import { ICreateUserRequestDTO } from './CreateUserDTO';

/**
 * Principio da responsabilidade √∫nica [S]
 * - N√£o √© responsabilidade do UseCase saber como os dados ser√£o persistidos,validadados, enviados ou recebidos
 */
export class CreateUserUseCase {
  /**
   * Principio da invers√£o de depend√™ncia [D]
   * - O UseCase n√£o deve ser respons√°vel por criar a inst√¢ncia do reposit√≥rio
   * - O UseCase deve receber a inst√¢ncia do reposit√≥rio por par√¢metro
   */
  constructor(
    private usersRepository: IUsersRepository,
    private mailProvider: IMailProvider,
  ) {}

  async execute(data: ICreateUserRequestDTO) {
    const userAlreadyExists = await this.usersRepository.findByEmail(
      data.email,
    );

    if (userAlreadyExists) {
      throw new Error('User already exists.');
    }

    const user = new User(data);
    await this.usersRepository.save(user);

    await this.mailProvider.sendMail({
      to: {
        name: data.name,
        email: data.email,
      },
      from: {
        name: "Willian 'Catano'üòÇ Campos",
        email: 'willian.campos@origoenergia.com.br',
      },
      subject: 'Seja bem-vindo √† plataforma',
      body: '<p>Voc√™ j√° pode fazer login em nossa plataforma.</p>',
    });
  }
}
